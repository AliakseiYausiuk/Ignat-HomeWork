{"version":3,"sources":["componets/Header/Header.module.css","componets/common/Button/ButtonItem.tsx","componets/common/Checkbox/CheckboxItem.tsx","componets/HomeWork-2/HomeWork-2.tsx","componets/common/Input/InputItem.tsx","componets/HomeWork-3/HomeWork3.tsx","componets/Header/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ButtonItem","props","Button","id","variant","color","onClick","click","title","CheckboxItem","useState","valueCheck","setValueCheck","Checkbox","checked","HomeWork2","v1","n","filter","data","setData","setTitle","onChangeFilter","find","el","Grid","container","item","xs","Paper","elevation","List","Typography","align","TextField","label","value","onChange","currentTarget","IconButton","aria-label","trim","alert","fontSize","map","ListItem","key","dense","button","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","newData","removeList","ButtonGroup","InputItem","error","setError","addMessage","add","onKeyPress","event","charCode","helperText","HomeWork3","number","setNumber","setQuantity","className","classes","Container","fixed","direction","alignItems","gutterBottom","newTitle","Box","component","Header","style","header","AppBar","position","Toolbar","edge","App","to","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.addfe642.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__cHPjA\"};","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport type ButtonItemType = {\r\n  title: string;\r\n  click: () => void;\r\n  id: string;\r\n};\r\n\r\nexport default function ButtonItem(props: ButtonItemType) {\r\n  return (\r\n    <div>\r\n      <Button\r\n        id={props.id}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={props.click}\r\n      >\r\n        {props.title}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nexport type checkboxType = boolean;\r\nexport type CheckboxItemType = {\r\n  id: string;\r\n};\r\n\r\nconst CheckboxItem = (props: CheckboxItemType) => {\r\n  let [valueCheck, setValueCheck] = useState<checkboxType>(false);\r\n  const changeValue = () => {\r\n    valueCheck = !valueCheck;\r\n    setValueCheck(valueCheck);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Checkbox id={props.id} checked={valueCheck} onClick={changeValue} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckboxItem;\r\n","import React, { useState } from \"react\";\r\nimport { v1 } from \"uuid\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\r\n\r\nimport { Button, ButtonGroup } from \"@material-ui/core\";\r\nimport ButtonItem from \"../common/Button/ButtonItem\";\r\nimport CheckboxItem from \"../common/Checkbox/CheckboxItem\";\r\n\r\nexport type onChangeFilterType = \"hight\" | \"middle\" | \"low\";\r\nexport type dataType = {\r\n  id: string;\r\n  n: string;\r\n  filter: onChangeFilterType;\r\n};\r\n\r\nexport const HomeWork2 = () => {\r\n  let [data, setData] = useState<Array<dataType>>([\r\n    { id: v1(), n: \"React\", filter: \"hight\" },\r\n    { id: v1(), n: \"Material-UI\", filter: \"low\" },\r\n    { id: v1(), n: \"JavaScript\", filter: \"middle\" },\r\n    { id: v1(), n: \"TDD\", filter: \"hight\" },\r\n    { id: v1(), n: \"Books\", filter: \"low\" },\r\n  ]);\r\n  let [title, setTitle] = useState(\"\");\r\n\r\n  const removeList = (id: string) => {\r\n    let newData = data.filter((el) => el.id !== id);\r\n    setData(newData);\r\n  };\r\n  const AddList = () => {\r\n    if (title.trim() !== \"\") {\r\n      setData([...data, { id: v1(), n: title, filter: \"hight\" }]);\r\n      setTitle(\"\");\r\n    } else {\r\n      alert(\"Вы ничего не вели,не делай так больше =)\");\r\n    }\r\n  };\r\n  const onChangeFilter = (filter: onChangeFilterType) => {\r\n    let newData = data.find((el) => el.filter === filter);\r\n    // if (newData) {\r\n    //   newData.filter = filter;\r\n    //   setData(newData);\r\n    // }\r\n  };\r\n  return (\r\n    <div>\r\n      <Grid container>\r\n        <Grid item xs={2}></Grid>\r\n        <Grid item xs={8}>\r\n          <Paper elevation={3}>\r\n            <List>\r\n              <Typography variant=\"h2\" align=\"center\">\r\n                Список дела на сегодня\r\n              </Typography>\r\n              <TextField\r\n                id=\"filled-basic\"\r\n                label=\"Filled\"\r\n                variant=\"filled\"\r\n                value={title}\r\n                onChange={(el) => {\r\n                  setTitle(el.currentTarget.value);\r\n                }}\r\n              />\r\n              <IconButton\r\n                aria-label=\"comments\"\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                  AddList();\r\n                }}\r\n              >\r\n                <PlaylistAddIcon fontSize=\"large\" />\r\n              </IconButton>\r\n              {data.map((value) => {\r\n                return (\r\n                  <ListItem key={value.id} dense button>\r\n                    <ListItemIcon>\r\n                      <CheckboxItem id={value.id} />\r\n                    </ListItemIcon>\r\n                    <ListItemText id={value.id} primary={value.n} />\r\n                    <ListItemSecondaryAction>\r\n                      <ListItemIcon>\r\n                        <ButtonItem\r\n                          id={value.id}\r\n                          title=\"Delete\"\r\n                          click={() => {\r\n                            removeList(value.id);\r\n                          }}\r\n                        />\r\n                      </ListItemIcon>\r\n\r\n                      {/* <ListItemIcon>\r\n                        <ButtonItem key={value.id}  />\r\n                      </ListItemIcon> */}\r\n\r\n                      {/* <IconButton\r\n                        aria-label=\"comments\"\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          removeList(value.id);\r\n                        }}\r\n                      >\r\n                        <DeleteForeverIcon />\r\n                      </IconButton> */}\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n              <ButtonGroup\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                aria-label=\"contained primary button group\"\r\n              >\r\n                <Button\r\n                  color=\"secondary\"\r\n                  onClick={() => {\r\n                    onChangeFilter(\"hight\");\r\n                  }}\r\n                >\r\n                  Hight\r\n                </Button>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    onChangeFilter(\"middle\");\r\n                  }}\r\n                >\r\n                  middle\r\n                </Button>\r\n                <Button\r\n                  color=\"inherit\"\r\n                  onClick={() => {\r\n                    onChangeFilter(\"low\");\r\n                  }}\r\n                >\r\n                  low\r\n                </Button>\r\n              </ButtonGroup>\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={2}></Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField/TextField\";\r\nimport ButtonItem from \"../Button/ButtonItem\";\r\nimport Grid from \"@material-ui/core/Grid/Grid\";\r\n\r\nexport type InputItemType = {\r\n  add: (newTitle: string) => void;\r\n  id: string;\r\n};\r\nexport type errorType = string | null;\r\n\r\nexport default function InputItem(props: InputItemType) {\r\n  let [error, setError] = useState<errorType>(null);\r\n  let [title, setTitle] = useState(\" \");\r\n\r\n  const addMessage = () => {\r\n    if (title.trim() !== \"\") {\r\n      props.add(title);\r\n      setTitle(\"\");\r\n    } else {\r\n      setError(\"Title is required\");\r\n    }\r\n  };\r\n\r\n  const newAlertKeyPress = (event: any) => {\r\n    setError(null);\r\n    if (event.charCode === 13) {\r\n      addMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container>\r\n      <TextField\r\n        id={props.id}\r\n        label=\"Filled\"\r\n        variant=\"filled\"\r\n        value={title}\r\n        onChange={(el) => {\r\n          setTitle(el.currentTarget.value);\r\n        }}\r\n        onKeyPress={newAlertKeyPress}\r\n        helperText={error}\r\n        error={!!error}\r\n      />\r\n      <ButtonItem title={\"Add\"} click={addMessage} id={props.id} />\r\n    </Grid>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Grid, TextField, Button, Typography, Box } from \"@material-ui/core\";\r\nimport classes from \"./HomeWork-3.module.css\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputItem from \"../common/Input/InputItem\";\r\n\r\nexport type numberType = number;\r\nexport type errorType = string | null;\r\n\r\nexport default function HomeWork3(props: any) {\r\n  let [number, setNumber] = useState<numberType>(0);\r\n\r\n  const newAlert = (newTitle: string) => {\r\n    alert(`Добрый день ${newTitle}`);\r\n\r\n    setQuantity(newTitle);\r\n  };\r\n\r\n  const setQuantity = (title: string) => {\r\n    if (title) {\r\n      number += 1;\r\n    }\r\n    setNumber(number);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.item}>\r\n      <Container fixed>\r\n        <Grid container direction=\"column\" alignItems=\"center\">\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Введите ваше имя!\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            <InputItem add={newAlert} id={\"1\"} />\r\n          </Grid>\r\n          <Box component=\"span\">\r\n            <Typography variant=\"h3\">{number}</Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div className={style.header}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">News</Typography>\r\n          <Button color=\"inherit\">Login</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport { HomeWork2 } from \"./componets/HomeWork-2/HomeWork-2\";\nimport HomeWork3 from \"./componets/HomeWork-3/HomeWork3\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport { Header } from \"./componets/Header/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"nav\">\n        <NavLink to=\"/homeWork2\">HomeWork-2</NavLink>\n        <NavLink to=\"/homeWork\">HomeWork-3</NavLink>\n      </div>\n      <div className=\"wrapper-content\">\n        <Route path=\"/homeWork2\" render={() => <HomeWork2 />} />\n        <Route path=\"/homeWork\" render={() => <HomeWork3 />} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}